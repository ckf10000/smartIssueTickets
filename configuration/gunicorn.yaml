################################
#                              #
#       关键信息解析             #
#                              #
################################
# gunicorn 日志格式：'%(h) -  %(t)s - %(u)s - %(s)s %(H)s'
# 出处：gunicorn.glogging.Logger.atoms
# h   远程地址
# l   “-“
# u   用户HTTP认证的用户名
# t   时间
# r   状态行，如：GET /test HTTP/1.1
# m   请求方法
# U   没有查询字符串的URL
# q   查询字符串
# H   协议
# s   状态码
# B   response长度
# b   response长度(CLF格式)
# f   参考
# a   浏览器(用户)代理
# T   请求时间，单位为s
# D   请求时间，单位为ms(微秒)
# p   进程id
# {Header}i   请求头
# {Header}o   相应头
# {Variable}e 环境变量

# worker进程的数量。建议值2-4 x $(NUM_CORES)， python代码就是： workers = (multiprocessing.cpu_count() * 2) + 1, 缺省为1
#workers: 1
# 此配置只适用于gthread 进程工作方式， 因为gevent这种使用的是协程工作方式。
threads: 100
# 监听地址和端口
bind: 0.0.0.0:5051
# 服务器中在pending状态的最大连接数，即client处于waiting的数目。
# 超过这个数目， client连接会得到一个error。建议值64-2048。
backlog: 64
# 设置守护进程,应用是否以daemon方式运行
daemon: True
# 当代码有修改时，自动重启workers。适用于开发环境
reload: False
# worker重启之前处理的最大requests数， 缺省值为0表示自动重启disabled。主要是防止内存泄露。
max_requests: 0
# 通常设为30，为0时，无限超时
timeout: 0
# server端保持连接时间
keepalive: 300
# worker进程的工作方式。 有sync, eventlet, gevent, tornado, gthread, 缺省值sync。
worker_class: gevent
# 设置最大并发量
worker_connections: 2000
# pid存储文件路径
# pidfile: /run/gunicorn.pid
# 防止gunicorn启动时多次调用app对象
preload_app: True

# adding ssl support
# certfile: /ssl/my_server_com.pem
# keyfile: /ssl/my_server_com.key


# 是否开启gunicorn日记录
logger_enable: False
# 默认格式: '%(h)s %(l)s %(u)s %(t)s "%(r)s" %(s)s %(b)s "%(f)s" "%(a)s"'
access_log_format: '%(t)s - Process-%(p)s - %(u)s@%(h)s - [status %(s)s] - "%(r)s" - RQT:%(D)sms - Length:%(b)s - "%(a)s"'
# 访问日志文件路径
accesslog: gunicorn_acess.log
# 错误日志路径
errorlog: gunicorn_run.log
# 日志级别。debug, info, warning, error, critical.
loglevel: debug